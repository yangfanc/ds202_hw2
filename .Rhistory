knitr::opts_chunk$set(echo = TRUE)
?round
install.packages('ggplot2')
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages("ggplot2")
library("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library("ggplot2")
install.packages("ggplot2")
librart(classdata)
library(classdata)
str(cities)
?cities
devtools::install_github("xdaiISU/classdata")
library(classdata)
str(cities)
?cities
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggplot2")
library("ggplot2")
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color = Species)) +
scale_color_viridis_d() +
theme_minimal()
devtools::install_github("xdaiISU/classdata")
library(classdata)
str(cities)
?cities
summary(cities)
cities <- cities[cities$Year == 2016,]
summary(cities)
cities <- cities[cities$Year == 2016,]
devtools::install_github("xdaiISU/classdata")
library(classdata)
str(cities)
?cities
cities2016$City
cities2016$City
summary(cities)
cities <- cities[cities$Year == 2016,]
cities2016$City
summary(cities)
cities2016 <- cities[cities$Year == 2016,]
cities2016$City
length(cities2016$city)
summary(cities)
cities2016 <- cities[cities$Year == 2016,]
cities2016$City
length(cities2016$city)
length(cities2016)
unique(cities2016$city)
length(cities2016)
unique(cities2016$City)
length(cities2016) #is the numbe of columns in cities 2016
unique(cities2016$City) #UNIQUE: unique elements in a vector
length(unique(cities2016$City))
cities2016$Population
min(cities2016$Population)
cities2016[cities2016$Population == min(cities2016$Population)]
##almost the same as
cities2016[which.min(cities2016$Population),]
#Another may to find the smalles city;
population <- cities2016$Population
names(population) <- cities2016$City
sort(population)
names(population) <- cities2016$City
sort(population)
sort(population,decreasing = TRUE)
smallest5 <- sort(population,decreasing = TRUE) [1:5]
biggest5 <- sort(population,decreasing = TRUE) [1:5]
biggest5 <- sort(population,decreasing = TRUE) [1:5]
?order
x <- c(3,1,2)
x [order(x)]
citiresSort <- cities[order(population),]
biggest5 <- sort(population,decreasing = TRUE) [1:5]
?order
x <- c(3,1,2)
x [order(x)]
citiresSorted <- cities2016[order(population),]
rank(population)
#define the number of violent crimes per thousand
cities$Violent.crime.per.1000 <- cities$Violent.crime / cities$Population * 1000
cities[which.max(cities$Violent.crime.per.1000),]
install.packages("ggplot2")
library("ggplot2")
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color = Species)) +
scale_color_viridis_d() +
theme_minimal()
install.packages("ggplot2")
# lock at the violent crime for all cities in all years
violent <- cities$Violent.crime.per.1000
hist(violent)
# lock at the violent crime for all cities in all years
violent <- cities$Violent.crime.per.1000
hist(violent)
# lock at the violent crime for all cities in all years
violent <- cities$Violent.crime.per.1000
hist(violent) # a large outlier(toledo in 2013)
boxplot(violent)
totalcrime <- cities2016$Violent.crime + cities2016$Property.crime
theft <-cities2016$Larceny.theft
ratio <- theft / totalcrime
names(ratio) <-crimes2016$City
totalcrime <- cities2016$Violent.crime + cities2016$Property.crime
theft <-cities2016$Larceny.theft
ratio <- theft / totalcrime
names(ratio) <-crities2016$City
totalcrime <- cities2016$Violent.crime + cities2016$Property.crime
theft <-cities2016$Larceny.theft
ratio <- theft / totalcrime
names(ratio) <- crities2016$City
totalcrime <- cities2016$Violent.crime + cities2016$Property.crime
theft <-cities2016$Larceny.theft
ratio <- theft / totalcrime
names(ratio) <- crities$City
totalcrime <- cities2016$Violent.crime + cities2016$Property.crime
theft <-cities2016$Larceny.theft
ratio <- theft / totalcrime
names(ratio) <- crities$city
totalcrime <- cities2016$Violent.crime + cities2016$Property.crime
theft <-cities2016$Larceny.theft
ratio <- theft / totalcrime
names(ratio) <- crities2016$city
totalcrime <- cities2016$Violent.crime + cities2016$Property.crime
theft <-cities2016$Larceny.theft
ratio <- theft / totalcrime
names(ratio) <- cities2016$city
sort(ratio)
x <- violent > 2
table(x) #tablulate a categorical vatiable
barplot(table(x))
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.vrime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, anes$violent.vrime.per.1000)
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.vrime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, anes$Violent.vrime.per.1000)
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, anes$Violent.vrime.per.1000)
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
plot(ames$Year, ames$violent.,type = 'l')
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
plot(ames$Year, ames$violent.,type = 'l')
isNeighbor<-cities=='nevada'|cities$City ='Boone'
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
plot(ames$Year, ames$violent.,type = 'l')
isNeighbor<-cities =='nevada'|cities$City ='Boone'
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
plot(ames$Year, ames$violent.,type = 'l')
isNeighbor <-cities =='nevada'|cities$City ='Boone'
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
plot(ames$Year, ames$violent.,type = 'l')
Neighbor <-cities =='nevada'|cities$City ='Boone'
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
plot(ames$Year, ames$violent.,type = 'l')
Neighbor <-cities =='nevada'|cities$City ='Boone'
ames <-cities[cities$City == 'Ames',]
str(ames)
ames$Violent.crime.per.1000 <- ames$Violent.crime / ames$Population * 1000
plot(ames$Year, ames$Violent.vrime.per.1000)
plot(ames$Year, ames$violent.,type = 'b')
plot(ames$Year, ames$violent.,type = 'l')
isNeighbor <-cities =='nevada'|cities$City ='Boone'
# agjust the y-axis
plot(ames$Year,ames$Violent.crime.per.1000, ylim = c(0,10))
point(neighbor$Year, neighbor$violent.crime.per.1000,ylim = c(0,max(neighbor$Violent.crime.1000)))
# agjust the y-axis
plot(ames$Year,ames$Violent.crime.per.1000, ylim = c(0,10))
point(neighbor$Year, neighbor$violent.crime.per.1000,ylim = c(0, max(neighbor$Violent.crime.1000)))
# agjust the y-axis
plot(ames$Year,ames$Violent.crime.per.1000, ylim = c(0,10))
points(neighbor$Year, neighbor$violent.crime.per.1000,ylim = c(0, max(neighbor$Violent.crime.1000)))
# agjust the y-axis
plot(ames$Year,ames$Violent.crime.per.1000, ylim = c(0,10))
points(neighbor$Year, neighbor$violent.crime.per.1000,ylim = c(0,max(neighbor$Violent.crime.1000)))
ankeny <-cities[cities$City = 'Ankeny']
Ankeny <-cities[cities$City = 'Ankeny']
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggplot2")
library("ggplot2")
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color = Species)) +
scale_color_viridis_d() +
theme_minimal()
ggplot()
ggplot
library(ggplot2)
library(ggplot2)
ggplot
str(cars)
mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwt))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
mpg
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(displ, cty, colour = class)) +
geom_point()
summary(mpg)
?mpg
sortHwy <- mpg[order(-mpg$hwy), ]
top3 <- sortHwy[1:3, ]
print(top3)
mpg1999 <- mpg[mpg$Year == 19999,]
mpg1999 <- mpg[mpg$Year == 1999,]
mpg1999 <- mpg[mpg$year == 1999,]
mpg1999 <- mpg[mpg$year == 1999,]
mpg1999
mpg2008 <- mpg[mpg$year == 2008,]
mpg2009
mpg2008 <- mpg[mpg$year == 2008,]
mpg2008
hwy1999 <-mpg1999$hwy
hwy1999 <-mpg1999$hwy
hwy1999
hwy1999(top3) <-mpg1999$hwy
hwy1999(top3) <-mpg1999$hwy(1:3)
hwy1999 <-mpg1999$hwy(1:3)
hwy1999 <-mpg1999$hwy(1:3, )
hwy1999 <-mpg1999$hwy[1:3, ]
sort(mpg1999$hwy)
sortHwy <- mpg[order(-mpg$hwy), ]
top3 <- sortHwy[1:3, ]
print(top3)
ggplot(aes(x=hwy, y =cty, color = year), data = subset(mpg, year == 2008 | year == 1999), select = c(hwy, cty)) + geom_jitter()
ggplot(aes(x=hwy, y =cty, color = year, size = cyl), data = subset(mpg, year == 2008 | year == 1999), select = c(hwy, cty)) + geom_jitter()
library(ggplot2)
library(classdata)
ggplot(mpg, aes(x=hwy, y=cty))+geom_point()
ggplot(aes(x=hwy, y=cty), data = mpg) +geom_jitter()
hwyBox <- ggplot(mpg, aes(group=year, x=year, y=hwy)) + geom_boxplot()
hwyBox
summary(mpg[mpg$year == '1999', ][, c('year', 'hwy')])
summary(mpg[mpg$year == '2008', ][, c('year', 'hwy')])
ctyBox <- ggplot(mpg, aes(group=year, x=year, y=cty)) + geom_boxplot()
ctyBox
summary(mpg[mpg$year == '1999', ][, c('year', 'cty')])
summary(mpg[mpg$year == '2008', ][, c('year', 'cty')])
hwyB <- ggplot(mpg, aes(group=year, x=year, y=hwy)) + geom_boxplot()
hwyB
summary(mpg[mpg$year == '1999', ][, c('year', 'hwy')])
summary(mpg[mpg$year == '2008', ][, c('year', 'hwy')])
ctyB <- ggplot(mpg, aes(group=year, x=year, y=cty)) + geom_boxplot()
ctyB
summary(mpg[mpg$year == '1999', ][, c('year', 'cty')])
summary(mpg[mpg$year == '2008', ][, c('year', 'cty')])
ggplot(aes(x = class, y = cty),data=mpg) + geom_boxplot() + scale_y_continuous(name="city miles per gallon")
CompactModels <-  mpg[mpg$class == 'compact', ]
numCompact <- length(unique(CompactModels$model))
print(numCompact)
summary(mpg[mpg$year == '1999', ][, c('year', 'hwy')])
summary(mpg[mpg$year == '2008', ][, c('year', 'hwy')])
ctyB <- ggplot(mpg, aes(group=year, x=year, y=cty)) + geom_boxplot()
ctyB
summary(mpg[mpg$year == '1999', ][, c('year', 'cty')])
summary(mpg[mpg$year == '2008', ][, c('year', 'cty')])
ggplot(aes(x = class, y = cty),data=mpg) + geom_boxplot() + scale_y_continuous(name="city miles per gallon")
hwyB <- ggplot(mpg, aes(group=year, x=year, y=hwy)) + geom_boxplot()
hwyB
summary(mpg[mpg$year == '1999', ][, c('year', 'hwy')])
summary(mpg[mpg$year == '2008', ][, c('year', 'hwy')])
summary(mpg[mpg$year == '1999', ][, c('year', 'cty')])
summary(mpg[mpg$year == '2008', ][, c('year', 'cty')])
ggplot(aes(x = class, y = cty),data=mpg) + geom_boxplot() + scale_y_continuous(name="city miles per gallon")
hwy1 <- ggplot(mpg, aes(group=year, x=year, y=hwy)) + geom_boxplot()
hwy1
cty1 <- ggplot(mpg, aes(group=year, x=year, y=cty)) + geom_boxplot()
cty1
install.packages('ggplot2')
library('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
install.packages('ggplot2')
library('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
